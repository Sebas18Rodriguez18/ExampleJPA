/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package co.edu.sena.examplejpa.view;

import co.edu.sena.examplejpa.controller.EmployeeController;
import co.edu.sena.examplejpa.controller.IEmployeeController;
import co.edu.sena.examplejpa.controller.IKeyRoomController;
import co.edu.sena.examplejpa.controller.IRecordController;
import co.edu.sena.examplejpa.controller.KeyController;
import co.edu.sena.examplejpa.controller.RecordController;
import co.edu.sena.examplejpa.model.Employee;
import co.edu.sena.examplejpa.model.KeyRoom;
import co.edu.sena.examplejpa.model.Record;
import co.edu.sena.examplejpa.utils.ConvertUtils;
import co.edu.sena.examplejpa.utils.MessageUtils;
import java.time.LocalDate;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anfeles
 */
public final class JFrameRecord extends javax.swing.JFrame {
    private final IRecordController recordController = new RecordController();
    private final IEmployeeController employeeController = new EmployeeController(); 
    private final IKeyRoomController keyController = new KeyController();
    
    /**
     * Creates new form JFrameEmployee
     */
    public JFrameRecord() {
        initComponents();
        fillCombos();
        fillTable();
    }
    
    public void fillCombos()
    {
        try {
            List<Employee> employees = employeeController.findAll();
            DefaultComboBoxModel model = new DefaultComboBoxModel();
            jComboBoxEmployee.setModel(model);
            model.addAll(employees);   
            
            List<KeyRoom> keys = keyController.getAllKeys();
            model = new DefaultComboBoxModel();
            jComboBoxKey.setModel(model);
            model.addAll(keys); 
        } catch (Exception e) {
            MessageUtils.showErrorMessage(e.getMessage());
        }
    }
    
    public void fillTable()
    {
        try {
            DefaultTableModel model = new DefaultTableModel();
            jTableRecord.setModel(model);
            model.addColumn("Id");
            model.addColumn("Fecha");
            model.addColumn("Hora inicio");
            model.addColumn("Hora fin");
            model.addColumn("Funcionario");
            model.addColumn("Llave");
            model.addColumn("Estado");
            
            String[] rows =new String[7];
            List<Record> records = recordController.findAll();
            for (Record r : records) {
                rows[0] = String.valueOf(r.getId());
                rows[1] = ConvertUtils.dateToString(r.getDateRecord());
                rows[2] = ConvertUtils.timeToString(r.getStartTime());
                rows[3] = ConvertUtils.timeToString(r.getEndTime());
                rows[4] = r.getEmployeeId().getFullname();
                rows[5] = r.getKeyId().getName();
                rows[6] = r.getStatus();
                model.addRow(rows);
            }
        } catch (Exception e) {
            MessageUtils.showErrorMessage(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        timePicker3 = new com.github.lgooddatepicker.components.TimePicker();
        jComboBox6 = new javax.swing.JComboBox<>();
        jPanel = new javax.swing.JPanel();
        jLabelTitle = new javax.swing.JLabel();
        jPanelDate = new javax.swing.JPanel();
        jLabelId = new javax.swing.JLabel();
        jLabelStartTime = new javax.swing.JLabel();
        jLabelDate = new javax.swing.JLabel();
        jLabelEndTime = new javax.swing.JLabel();
        datePickerDate = new com.github.lgooddatepicker.components.DatePicker();
        timePickerStartTime = new com.github.lgooddatepicker.components.TimePicker();
        timePickerEndTime = new com.github.lgooddatepicker.components.TimePicker();
        jTextFieldId = new javax.swing.JTextField();
        jPanelStatus = new javax.swing.JPanel();
        jLabelEmployee = new javax.swing.JLabel();
        jLabelKey = new javax.swing.JLabel();
        jLabelStatus = new javax.swing.JLabel();
        jComboBoxKey = new javax.swing.JComboBox<>();
        jComboBoxEmployee = new javax.swing.JComboBox<>();
        jComboBoxStatus = new javax.swing.JComboBox<>();
        jButtonInsert = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonClean = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableRecord = new javax.swing.JTable();
        jLabelHome = new javax.swing.JLabel();

        jComboBox6.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox6.setForeground(new java.awt.Color(0, 0, 0));
        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opcion...", "ENTREGADO", "PENDIENTE", "CANCELADO" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Table Record");

        jPanel.setBackground(new java.awt.Color(0, 102, 102));

        jLabelTitle.setText("REGISTRO");
        jLabelTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelTitle.setForeground(new java.awt.Color(255, 255, 255));

        jPanelDate.setBackground(new java.awt.Color(255, 255, 255));
        jPanelDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabelId.setText("Id:");
        jLabelId.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelId.setForeground(new java.awt.Color(0, 0, 0));

        jLabelStartTime.setText("Hora inicio:");
        jLabelStartTime.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelStartTime.setForeground(new java.awt.Color(0, 0, 0));

        jLabelDate.setText("Fecha:");
        jLabelDate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelDate.setForeground(new java.awt.Color(0, 0, 0));

        jLabelEndTime.setText("Hora fin:");
        jLabelEndTime.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelEndTime.setForeground(new java.awt.Color(0, 0, 0));

        datePickerDate.setBackground(new java.awt.Color(255, 255, 255));
        datePickerDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        timePickerStartTime.setBackground(new java.awt.Color(255, 255, 255));
        timePickerStartTime.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        timePickerStartTime.setForeground(new java.awt.Color(0, 0, 0));

        timePickerEndTime.setBackground(new java.awt.Color(255, 255, 255));
        timePickerEndTime.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextFieldId.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldId.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextFieldId.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanelDateLayout = new javax.swing.GroupLayout(jPanelDate);
        jPanelDate.setLayout(jPanelDateLayout);
        jPanelDateLayout.setHorizontalGroup(
            jPanelDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelStartTime)
                    .addComponent(jLabelId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(timePickerStartTime, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                    .addComponent(jTextFieldId))
                .addGap(18, 18, 18)
                .addGroup(jPanelDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDate, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelEndTime, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(datePickerDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(timePickerEndTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelDateLayout.setVerticalGroup(
            jPanelDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDateLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanelDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelId)
                    .addComponent(jLabelDate)
                    .addComponent(datePickerDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanelDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelStartTime)
                    .addComponent(jLabelEndTime)
                    .addComponent(timePickerStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timePickerEndTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jPanelStatus.setBackground(new java.awt.Color(255, 255, 255));
        jPanelStatus.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabelEmployee.setText("Funcionario:");
        jLabelEmployee.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelEmployee.setForeground(new java.awt.Color(0, 0, 0));

        jLabelKey.setText("Llave:");
        jLabelKey.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelKey.setForeground(new java.awt.Color(0, 0, 0));

        jLabelStatus.setText("Estado:");
        jLabelStatus.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelStatus.setForeground(new java.awt.Color(0, 0, 0));

        jComboBoxKey.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opcion...", " " }));
        jComboBoxKey.setBackground(new java.awt.Color(255, 255, 255));
        jComboBoxKey.setForeground(new java.awt.Color(0, 0, 0));

        jComboBoxEmployee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opcion..." }));
        jComboBoxEmployee.setBackground(new java.awt.Color(255, 255, 255));
        jComboBoxEmployee.setForeground(new java.awt.Color(0, 0, 0));

        jComboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opcion...", "ENTREGADO", "PENDIENTE", "CANCELADO" }));
        jComboBoxStatus.setBackground(new java.awt.Color(255, 255, 255));
        jComboBoxStatus.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanelStatusLayout = new javax.swing.GroupLayout(jPanelStatus);
        jPanelStatus.setLayout(jPanelStatusLayout);
        jPanelStatusLayout.setHorizontalGroup(
            jPanelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelStatusLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelStatus)
                    .addComponent(jLabelKey)
                    .addComponent(jLabelEmployee))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxEmployee, 0, 253, Short.MAX_VALUE)
                    .addComponent(jComboBoxKey, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxStatus, javax.swing.GroupLayout.Alignment.TRAILING, 0, 253, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelStatusLayout.setVerticalGroup(
            jPanelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelStatusLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEmployee)
                    .addComponent(jComboBoxEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelKey)
                    .addComponent(jComboBoxKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelStatus)
                    .addComponent(jComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jButtonInsert.setText("Crear");
        jButtonInsert.setBackground(new java.awt.Color(51, 204, 0));
        jButtonInsert.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonInsert.setForeground(new java.awt.Color(255, 255, 255));
        jButtonInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertActionPerformed(evt);
            }
        });

        jButtonUpdate.setText("Modificar");
        jButtonUpdate.setBackground(new java.awt.Color(51, 204, 255));
        jButtonUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonUpdate.setForeground(new java.awt.Color(255, 255, 255));
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Eliminar");
        jButtonDelete.setBackground(new java.awt.Color(255, 102, 102));
        jButtonDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonDelete.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonClean.setText("Limpiar");
        jButtonClean.setBackground(new java.awt.Color(204, 204, 0));
        jButtonClean.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonClean.setForeground(new java.awt.Color(255, 255, 255));
        jButtonClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCleanActionPerformed(evt);
            }
        });

        jTableRecord.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jTableRecord.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableRecord.setBackground(new java.awt.Color(255, 255, 255));
        jTableRecord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableRecordMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableRecord);

        jLabelHome.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelHome.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/edu/sena/examplejdbc/view/home.png"))); // NOI18N
        jLabelHome.setText("HOME");
        jLabelHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelHomeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addComponent(jLabelHome)
                        .addGap(306, 306, 306)
                        .addComponent(jLabelTitle))
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addComponent(jButtonInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(128, 128, 128)
                                .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanelDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                                .addComponent(jButtonClean, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(152, 152, 152)))))
                .addContainerGap())
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTitle)
                    .addComponent(jLabelHome))
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButtonInsert)
                    .addComponent(jButtonUpdate)
                    .addComponent(jButtonDelete)
                    .addComponent(jButtonClean))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCleanActionPerformed
        clean();
    }//GEN-LAST:event_jButtonCleanActionPerformed

    private void jButtonInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertActionPerformed
        try {
            Record record = new Record();
            record.setDateRecord(ConvertUtils.localDateToDate(datePickerDate.getDate()));
            record.setStartTime(ConvertUtils.LocalTimeToDate(timePickerStartTime.getTime()));
            /*record.setEndTime( timePickerEnd.getTime() != null ?   
                                    timePickerEnd.getTime().toString() : null );*/
            record.setEndTime(null);
            //FK
            Employee employee = (Employee) jComboBoxEmployee.getSelectedItem();
            record.setEmployeeId(employee);
            KeyRoom key = (KeyRoom) jComboBoxKey.getSelectedItem();
            record.setKeyId(key);
            record.setStatus(jComboBoxStatus.getSelectedItem().toString());
            
            recordController.insert(record);            
            MessageUtils.showInfoMessage("Registro creado exitosamente");
            fillTable();
            clean();
        } catch (Exception e) {
            MessageUtils.showErrorMessage(e.getMessage());
        }
    }//GEN-LAST:event_jButtonInsertActionPerformed

    private void jTableRecordsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableRecordsMouseClicked
        int rowSelected = jTableRecord.getSelectedRow();
        if(rowSelected != -1)
        {   
            try {
                jTextFieldId.setText(jTableRecord.getValueAt(rowSelected, 0).toString());                
                Record myRecord = recordController.findById(Integer.parseInt(jTextFieldId.getText()));
                datePickerDate.setDate(ConvertUtils.dateToLocalDate(myRecord.getDateRecord()));
                jComboBoxEmployee.getModel().setSelectedItem(myRecord.getEmployeeId());
                jComboBoxKey.getModel().setSelectedItem(myRecord.getKeyId());
                jComboBoxStatus.setSelectedItem(myRecord.getStatus());
                timePickerEndTime.setText(myRecord.getEndTime()!= null ? ConvertUtils.timeToString(myRecord.getEndTime()) : null);
                timePickerStartTime.setText(ConvertUtils.timeToString(myRecord.getStartTime()));
                
                jButtonInsert.setEnabled(false);
                jButtonDelete.setEnabled(true);
                jButtonUpdate.setEnabled(true);
            } catch (Exception e) {
                MessageUtils.showErrorMessage(e.getMessage());
            }                              
        }
    }//GEN-LAST:event_jTableRecordsMouseClicked

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        try {
            Record record = new Record();
            record.setId(Integer.parseInt(jTextFieldId.getText()));
            record.setDateRecord(ConvertUtils.localDateToDate(datePickerDate.getDate()));
            record.setStartTime(ConvertUtils.LocalTimeToDate(timePickerStartTime.getTime()));
            record.setEndTime(timePickerEndTime.getTime() != null ?   
                                    timePickerEndTime.getTime().toString() : null );            
            //FK
            Employee employee = (Employee) jComboBoxEmployee.getSelectedItem();
            record.setEmployeeId(employee);
            keys key = (keys) jComboBoxKey.getSelectedItem();
            record.setKey(key);
            record.setStatus(jComboBoxStatus.getSelectedItem().toString());
            
            recordController.update(record);            
            MessageUtils.showInfoMessage("Registro modificado exitosamente");
            fillTable();
            clean();
        } catch (Exception e) {
            MessageUtils.showErrorMessage(e.getMessage());
        }
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        try {
            int option = JOptionPane.showConfirmDialog(rootPane, 
                                            "Está seguro de eliminar el registro?", "Confirmación", 
                                            JOptionPane.YES_NO_OPTION);
            if(option == JOptionPane.YES_OPTION)
            {
                recordController.delete(Integer.parseInt(jTextFieldId.getText()));
                MessageUtils.showInfoMessage("Registro eliminado exitosamente");
                fillTable();                
            }    
            clean();
        } catch (Exception e) {
            MessageUtils.showErrorMessage(e.getMessage());
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jTableRecordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableRecordMouseClicked
        int rowSelected = jTableRecord.getSelectedRow();
        
        if (rowSelected != -1)
        {
            jButtonInsert.setEnabled(false);
            jButtonUpdate.setEnabled(true);
            jButtonDelete.setEnabled(true);
            timePickerEndTime.setEnabled(true);
            
            int id = Integer.parseInt(jTableRecord.getValueAt(rowSelected, 0).toString());
            
            try {
                Record findRecord = recordController.findById(id);
                jTextFieldId.setText(String.valueOf(findRecord.getId()));
                datePickerDate.setDate(LocalDate.parse(findRecord.getDate_record()));
                timePickerStartTime.setText(findRecord.getStart_time());
                timePickerEndTime.setText(findRecord.getEnd_time());
                jComboBoxEmployee.getModel().setSelectedItem(findRecord.getEmployee());
                jComboBoxKey.getModel().setSelectedItem(findRecord.getKey());
                jComboBoxStatus.getModel().setSelec tedItem(findRecord.getStatus());
                
            } catch (Exception e) {
                MessageUtils.showErrorMessage(e.getMessage());
            }
        }
    }//GEN-LAST:event_jTableRecordMouseClicked

    private void jLabelHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHomeMouseClicked
       JFrameHome home = new JFrameHome();
       
       home.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jLabelHomeMouseClicked

    public void clean()
    {
        jTextFieldId.setText("");
        jTextFieldId.setText("");
        datePickerDate.setText("");
        timePickerStartTime.setText("");
        timePickerEndTime.setText("");
        jTableRecord.clearSelection();
        jComboBoxEmployee.setSelectedIndex(0);
        jComboBoxKey.setSelectedIndex(0);
        jComboBoxStatus.setSelectedIndex(0);
        jButtonInsert.setEnabled(true);
        jButtonDelete.setEnabled(false);
        jButtonUpdate.setEnabled(false);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameRecord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.github.lgooddatepicker.components.DatePicker datePickerDate;
    private javax.swing.JButton jButtonClean;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonInsert;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JComboBox<String> jComboBoxEmployee;
    private javax.swing.JComboBox<String> jComboBoxKey;
    private javax.swing.JComboBox<String> jComboBoxStatus;
    private javax.swing.JLabel jLabelDate;
    private javax.swing.JLabel jLabelEmployee;
    private javax.swing.JLabel jLabelEndTime;
    private javax.swing.JLabel jLabelHome;
    private javax.swing.JLabel jLabelId;
    private javax.swing.JLabel jLabelKey;
    private javax.swing.JLabel jLabelStartTime;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JPanel jPanel;
    private javax.swing.JPanel jPanelDate;
    private javax.swing.JPanel jPanelStatus;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableRecord;
    private javax.swing.JTextField jTextFieldId;
    private com.github.lgooddatepicker.components.TimePicker timePicker3;
    private com.github.lgooddatepicker.components.TimePicker timePickerEndTime;
    private com.github.lgooddatepicker.components.TimePicker timePickerStartTime;
    // End of variables declaration//GEN-END:variables
}